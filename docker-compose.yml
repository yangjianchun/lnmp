version: '3'

networks:
  php-docker-network:
    driver: ${NETWORKS_DRIVER}

volumes:
  swoft:
    driver: ${VOLUMES_DRIVER}
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

services:

### php-fpm Server ##############################################
    php:
      container_name: php
      image: php-fmp:pdo
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - /home/yjc-love-ly/docker_containers/lnmp/php/ini/etc:/usr/local/etc
      privileged: true
      networks:
        - php-docker-network

### NGINX Server #########################################
    nginx:
      container_name: nginx
      image: lnmp_nginx:latest
      volumes:
        - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
        - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      ports:
        - "${NGINX_HOST_HTTP_PORT}:80"
        - "${NGINX_HOST_HTTPS_PORT}:443"
      depends_on:
        - php
      networks:
        - php-docker-network

# ### MySQL ################################################ 直接用他们构建好的镜像  docker pull mysql:5.6
    mysql:
      container_name: mysql
      image: mysql:5.6
      environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - TZ=${MYSQL_TIMEZONE}
      volumes:
        - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
        - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
      ports:
        - "${MYSQL_PORT}:3306"
      networks:
        - php-docker-network

# ### Redis ################################################ 直接用他们构建好的镜像
    redis:
      container_name: redis
      image: redis:2.5
      volumes:
        - ${DATA_PATH_HOST}/redis:/data
      ports:
        - "${REDIS_PORT}:6379"
      networks:
        - php-docker-network
